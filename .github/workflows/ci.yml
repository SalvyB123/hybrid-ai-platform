name: ci

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    tests:
        name: run-tests
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:16
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: app
                ports: ["5432:5432"]
                options: >-
                    --health-cmd="pg_isready -U postgres -d app"
                    --health-interval=5s
                    --health-timeout=5s
                    --health-retries=10

        env:
            # Canonical DSNs...
            DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/app
            DATABASE_ASYNC_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/app

            # App DB settings...
            APP_DB_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/app
            APP_DB_HOST: localhost
            APP_DB_PORT: 5432
            APP_DB_USER: postgres
            APP_DB_PASSWORD: postgres
            APP_DB_NAME: app

            # CORS (must be JSON for pydantic-settings)
            CORS_ALLOWED_ORIGINS: '["http://localhost:5173"]'

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install system deps (pg_isready)
              run: |
                  sudo apt-get update
                  sudo apt-get install -y postgresql-client

            - name: Cache pip
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install -r requirements-dev.txt

            - name: Lint (ruff + black)
              run: |
                  ruff check .
                  python -m black --check --diff .

            - name: Wait for database
              run: |
                  for i in {1..30}; do
                    pg_isready -h localhost -p 5432 -U postgres -d app && break
                    sleep 2
                  done

            - name: Run migrations
              run: python -m alembic upgrade head

            - name: Readiness probe
              run: |
                  curl -sf http://localhost:8000/health
                  curl -sf http://localhost:8000/readiness
            - name: Run tests
              run: pytest -q

    lint-frontend:
        name: lint-typecheck-frontend
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend

        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json

            - name: Install dependencies
              run: npm ci

            - name: Type check (tsc)
              run: npm run typecheck

            - name: ESLint
              run: npm run lint

            - name: Prettier check
              run: npm run format:check

    frontend:
        name: build-frontend
        runs-on: ubuntu-latest
        needs: [lint-frontend]
        defaults:
            run:
                working-directory: frontend

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json

            - name: Install dependencies
              run: npm ci

            - name: Build
              run: npm run build

    e2e-frontend:
        name: e2e-frontend (cypress)
        runs-on: ubuntu-latest
        needs: [lint-frontend]
        defaults:
            run:
                working-directory: frontend
        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: frontend/package-lock.json

            - name: Install dependencies
              run: npm ci

            # This script should start Vite and run Cypress using start-server-and-test
            # Ensure you have: "cy:run": "start-server-and-test dev http://localhost:5173 'cypress run --browser chrome'"
            - name: Run Cypress e2e
              run: npm run cy:run
